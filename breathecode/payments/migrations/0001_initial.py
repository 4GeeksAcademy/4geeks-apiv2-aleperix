# Generated by Django 3.2.16 on 2022-10-31 02:09

import breathecode.payments.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mentorship', '0016_alter_mentorshipbill_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admissions', '0047_merge_20220924_0611'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('valid_until', models.DateTimeField(blank=True, default=None, null=True)),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, breathecode.payments.models.ICommonServiceItem),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=20)),
                ('countries',
                 models.ManyToManyField(help_text='Countries that use this currency officially',
                                        related_name='currencies',
                                        to='admissions.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('paid_at', models.DateTimeField()),
                ('status',
                 models.CharField(choices=[('FULFILLED', 'Fulfilled'), ('REJECTED', 'Rejected'),
                                           ('PENDING', 'Pending'), ('REFUNDED', 'Refunded'),
                                           ('DISPUTED_AS_FRAUD', 'Disputed as fraud')],
                                  default='PENDING',
                                  max_length=17)),
                ('stripe_id', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academy',
                 models.ForeignKey(blank=True,
                                   default=None,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='admissions.academy')),
                ('currency',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.currency')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('slug', models.CharField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=255)),
                ('status',
                 models.CharField(choices=[('DRAFT', 'Draft'), ('VISIBLE', 'Visible'), ('HIDDEN', 'Hidden'),
                                           ('DELETED', 'Deleted')],
                                  default='DRAFT',
                                  max_length=7)),
                ('renew_every', models.IntegerField(default=1)),
                ('renew_every_unit',
                 models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'),
                                           ('YEAR', 'Year')],
                                  default='MONTH',
                                  max_length=10)),
                ('trial_duration', models.IntegerField(default=1)),
                ('trial_duration_unit',
                 models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'),
                                           ('YEAR', 'Year')],
                                  default='MONTH',
                                  max_length=10)),
                ('owner',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='admissions.academy')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('currency',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.currency')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('renew_every', models.IntegerField(default=1)),
                ('renew_every_unit',
                 models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'),
                                           ('YEAR', 'Year')],
                                  default='MONTH',
                                  max_length=10)),
            ],
            bases=(models.Model, breathecode.payments.models.ICommonServiceItem),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('paid_at', models.DateTimeField()),
                ('status',
                 models.CharField(choices=[('FREE_TRIAL', 'Free trial'), ('ACTIVE', 'Active'),
                                           ('CANCELLED', 'Cancelled'), ('DEPRECATED', 'Deprecated'),
                                           ('PAYMENT_ISSUE', 'Payment issue')],
                                  default='ACTIVE',
                                  max_length=13)),
                ('is_cancellable', models.BooleanField(default=True)),
                ('is_refundable', models.BooleanField(default=True)),
                ('is_auto_renew', models.BooleanField(default=True)),
                ('valid_until', models.DateTimeField()),
                ('last_renew', models.DateTimeField()),
                ('renew_credits_at', models.DateTimeField()),
                ('pay_every', models.IntegerField(default=1)),
                ('pay_every_unit',
                 models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'),
                                           ('YEAR', 'Year')],
                                  default='MONTH',
                                  max_length=10)),
                ('renew_every', models.IntegerField(default=1)),
                ('renew_every_unit',
                 models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'),
                                           ('YEAR', 'Year')],
                                  default='MONTH',
                                  max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoices', models.ManyToManyField(to='payments.Invoice')),
                ('plans', models.ManyToManyField(to='payments.Plan')),
                ('services', models.ManyToManyField(to='payments.ServiceItem')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('slug', models.CharField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=255)),
                ('private', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cohorts', models.ManyToManyField(to='admissions.Cohort')),
                ('groups', models.ManyToManyField(to='auth.Group')),
                ('mentorship_services', models.ManyToManyField(to='mentorship.MentorshipService')),
                ('owner',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='admissions.academy')),
                ('prices', models.ManyToManyField(to='payments.Price')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='plan',
            name='prices',
            field=models.ManyToManyField(to='payments.Price'),
        ),
        migrations.AddField(
            model_name='plan',
            name='services',
            field=models.ManyToManyField(to='payments.ServiceItem'),
        ),
        migrations.CreateModel(
            name='PaymentContact',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=20)),
                ('user',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                                      related_name='payment_contact',
                                      to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialReputation',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('in_4geeks',
                 models.CharField(choices=[('FULFILLED', 'Fulfilled'), ('REJECTED', 'Rejected'),
                                           ('PENDING', 'Pending'), ('REFUNDED', 'Refunded'),
                                           ('DISPUTED_AS_FRAUD', 'Disputed as fraud')],
                                  default='GOOD',
                                  max_length=17)),
                ('in_stripe',
                 models.CharField(choices=[('FULFILLED', 'Fulfilled'), ('REJECTED', 'Rejected'),
                                           ('PENDING', 'Pending'), ('REFUNDED', 'Refunded'),
                                           ('DISPUTED_AS_FRAUD', 'Disputed as fraud')],
                                  default='GOOD',
                                  max_length=17)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                                      related_name='reputation',
                                      to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('valid_until', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_free_trial', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.invoice')),
                ('services', models.ManyToManyField(to='payments.Consumable')),
            ],
        ),
        migrations.CreateModel(
            name='Bag',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True, serialize=False,
                                     verbose_name='ID')),
                ('status',
                 models.CharField(choices=[('CHECKING', 'Checking'), ('PAID', 'Paid')],
                                  default='CHECKING',
                                  max_length=8)),
                ('is_recurrent', models.BooleanField(default=False)),
                ('was_delivered', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('token', models.CharField(blank=True, db_index=True, default=None, max_length=40,
                                           null=True)),
                ('expires_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plans', models.ManyToManyField(to='payments.Plan')),
                ('services', models.ManyToManyField(to='payments.ServiceItem')),
                ('user',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
